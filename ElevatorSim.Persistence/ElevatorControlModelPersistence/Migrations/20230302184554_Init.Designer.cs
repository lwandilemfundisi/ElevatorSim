// <auto-generated />
using ElevatorSim.Persistence.ElevatorControlModelPersistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElevatorSim.Persistence.ElevatorControlModelPersistence.Migrations
{
    [DbContext(typeof(ElevatorControlContext))]
    [Migration("20230302184554_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElevatorSim.Domain.DomainModel.ElevatorControlModel.ElevatorControl", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ElevatorControl");
                });

            modelBuilder.Entity("ElevatorSim.Domain.DomainModel.ElevatorControlModel.Entities.ManagedElevator", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ElevatorControlId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ElevatorId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ElevatorControlId");

                    b.ToTable("ManagedElevator");
                });

            modelBuilder.Entity("ElevatorSim.Domain.DomainModel.ElevatorControlModel.Entities.ManagedElevator", b =>
                {
                    b.HasOne("ElevatorSim.Domain.DomainModel.ElevatorControlModel.ElevatorControl", null)
                        .WithMany("Elevators")
                        .HasForeignKey("ElevatorControlId");
                });

            modelBuilder.Entity("ElevatorSim.Domain.DomainModel.ElevatorControlModel.ElevatorControl", b =>
                {
                    b.Navigation("Elevators");
                });
#pragma warning restore 612, 618
        }
    }
}
